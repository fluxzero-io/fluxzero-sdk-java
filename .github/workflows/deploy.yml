name: Deploy

on:
  push:
    branches: [ main ]
    tags-ignore:
      - "[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:
    inputs:
      version:
        description: "Version e.g. 1.0.1 (leave empty to auto-bump)"
        required: false
        default: ""

env:
  BUILD_ENVIRONMENT: github

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # Auto-bump when no version input (push or manual dispatch without version)
      - name: Bump version and push tag
        if: ${{ !github.event.inputs.version || github.event.inputs.version == '' }}
        uses: mathieudutour/github-tag-action@v6.2
        id: tag_auto
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: minor
          tag_prefix: ""

      # Use provided version when input is set
      - name: Use provided version and push tag
        if: ${{ github.event.inputs.version && github.event.inputs.version != '' }}
        uses: mathieudutour/github-tag-action@v6.2
        id: tag_manual
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: .*
          custom_tag: ${{ github.event.inputs.version }}
          tag_prefix: ""

      - name: Set resolved version
        id: set_version
        run: |
          VERSION="${{ steps.tag_manual.outputs.new_version || steps.tag_auto.outputs.new_version }}"
          CHANGELOG="${{ steps.tag_manual.outputs.changelog || steps.tag_auto.outputs.changelog }}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          {
            echo "CHANGELOG<<EOF"
            echo "$CHANGELOG"
            echo "EOF"
          } >> $GITHUB_ENV
          echo "Final version is: $VERSION"

      - name: Set maven version
        run: mvn -B versions:set -DnewVersion=${{ env.VERSION }}

      - name: Deploy to Maven Central
        run: mvn -P deploy -B deploy
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_TOKEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
          MAVEN_GPG_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Generate javadoc html
        run: |
          mvn -B site
          for module in sdk common proxy test-server; do
            mkdir -p target/site/$module
            mv $module/target/site/* target/site/$module/
          done
          find target/site -name "*.html" -exec sed -i'' '/<head>/a\
          <meta http-equiv="Cache-Control" content="no-store, no-cache, must-revalidate, max-age=0" />\
          <meta http-equiv="Pragma" content="no-cache" />\
          <meta http-equiv="Expires" content="0" />' {} +

      - name: Publish Javadoc to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site
          destination_dir: javadoc

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Fluxzero ${{ env.VERSION }}
          body: ${{ env.CHANGELOG }}

      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Fluxzero JWT
        id: fluxzero-jwt
        uses: fluxzero-io/fluxzero-jwt-action@v1
        with:
          api-key: ${{ secrets.FLUXZERO_API_KEY }}

      - name: Log in to Fluxzero Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.flux.host
          username: ${{ steps.fluxzero-jwt.outputs.userId }}
          password: ${{ steps.fluxzero-jwt.outputs.token }}

      - name: Build and push test server docker
        uses: docker/build-push-action@v6
        with:
          context: test-server/.
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/fluxzero-test:${{ env.VERSION }}
            ghcr.io/${{ github.repository }}/fluxzero-test:latest

      - name: Build and push proxy docker
        uses: docker/build-push-action@v6
        with:
          context: proxy/.
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/fluxzero-proxy:${{ env.VERSION }}
            ghcr.io/${{ github.repository }}/fluxzero-proxy:latest
            registry.flux.host/fluxzero-proxy:${{ env.VERSION }}
            registry.flux.host/fluxzero-proxy:latest
